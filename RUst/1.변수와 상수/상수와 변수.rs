fn main(){
    let x = 5;
    println!("x is {}", x);
    x = 6;
    println!(x is  {}. x);
}

//이 코드에서 x는 불변성 변수이기에 실행 할 수 없다. x의 값을 변경하려면 mut를 사용해야한다.

fn main(){
    let mut x = 5;
    println!("x is {}", x);
    x = 6;
    println!("x is {}", x);
}

//이렇게 작성해야 함

상수 선언 방법

const PI: f64 = 3.14;

//1. const는 rust에서 상수를 정의할때 사용하는 키워드 상수는 프로그램 실행 중에 변하지 않는 불변 값을 나타내며 const로 선언된 값은 정적바인딩됨.
//2. PI는 정의하려는 상수의 이름 상수 명명 규칙에 따라 대문자로 작성하며, 명시적으로 나타내야함
//3. f64는 상수의 타입 지정이며 위 소스코드에서 'f64'는 64비트 부동소수점 타입을 의미한다. rust에서 상수를 지정할때는 명시적으로 타입을 지정해야한다.
//4. '=3.14"는 함수명 PI에 3.14라는 값을 할당한다.

//결론적으로 위 코드는 PI라는 이름을 가진 64비트 부동소수점 상수를 정의하며, 그 값을 3.14로 할당한다. 이 상수는 정적 바인딩 이기에 프로그램 내에서 변경 할 수 없다
